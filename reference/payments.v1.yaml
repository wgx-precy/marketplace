openapi: 3.0.0
info:
  title: Marketplace
  version: '1.0'
  description: The Lianlian Pay Marketplace API is designed for Marketplaces to link their accounts with Lianlian Pay merchant accounts and send them cross currency payments.
  contact:
    name: David Dawson
    email: david.dawson@lianlian.com
servers:
  - url: 'https://global-api.lianlianpay.com/marketplace'
    description: Production
  - url: 'https://global-api-sandbox.lianlianpay.com/marketplace'
    description: Sandbox
paths:
  /merchants:
    post:
      summary: Start New Merchant Registration
      operationId: post-merchants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
              examples:
                Example 1:
                  value:
                    registration_url: 'https://example.lianlianpay.com/register/SADIS1FYOAWEBRAILKRYF32'
                    shop_url: 'https://shop.xxxx.com/C28E07DA61381ECD'
                    note: test shope
                    registration_complete: false
                    shop_name: dingdong
                    client_id: C28E07DA61381ECD
                    status: null
                    id: null
                Example 2:
                  value:
                    registration_url: null
                    shop_url: 'https://shop.xxxx.com/C28E07DA61381ECD'
                    note: test shope
                    registration_complete: true
                    shop_name: dingdong
                    id: '8000002020101011234'
                    client_id: C28E07DA61381ECD
                    status: success
        '400':
          description: |
            Codes:

            | Code | Description |
            |------|------------|
            |999995 | Invalid Parameter |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: "Starts asynchronous process of registering a new merchant with Lianlian Pay.  \n\nOn successful return, if `registration_complete` is `false`, platform shall use `registration_url` to redirect the merchant to in order to begin the Lianlian Pay Registration Experience.  \n\nWhen registration is successfully completed the user will be redirected to the passed in `redirect_url`"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: Merchant ID as known by the client platform
                store_name:
                  type: string
                  description: Store name as known by the calling platform
                redirect_url:
                  type: string
                  description: 'URL Lianlina Pay will redirect to at the end of a successful registration process.  '
                shop_url:
                  type: string
                  description: URL of merchant store if URL canâ€™t be algorithmically produced from merchant_id
                note:
                  type: string
                  description: Note to be used by customer support if needed
              required:
                - client_id
                - store_name
                - redirect_url
      tags:
        - Merchants
  '/merchants/{merchant_id}':
    parameters:
      - schema:
          type: string
        name: merchant_id
        in: path
        required: true
        description: Lian Lian Merchant ID
    get:
      summary: Get Merchant
      tags:
        - Merchants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
              examples:
                Example:
                  value:
                    registration_url: null
                    shop_url: 'https://shop.xxxx.com/C28E07DA61381ECD'
                    note: test shope
                    registration_complete: true
                    shop_name: dingdong
                    id: '8000002020101011234'
                    client_id: C28E07DA61381ECD
                    status: success
      operationId: get-merchants-merchant.id
      description: Get information about the merchant - in particular their status on the Lianlian Pay platform.
  '/merchants/client_id/{client_id}':
    parameters:
      - name: client_id
        in: path
        required: true
        schema:
          type: string
        description: Client ID for a Merchant that has alraedy begun registration
    get:
      summary: Get Merchant by Client ID
      tags:
        - Merchants
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
              examples:
                Example:
                  value:
                    registration_url: null
                    shop_url: 'https://shop.xxxx.com/C28E07DA61381ECD'
                    note: test shope
                    registration_complete: true
                    shop_name: dingdong
                    id: '8000002020101011234'
                    client_id: C28E07DA61381ECD
                    status: success
      operationId: get-merchants-lookup-client_id
      description: "Get information about the merchant based on the Client's ID for that merchant - in particular their status on the Lianlian Pay platform."
  '/merchants/{merchant_id}/payments':
    parameters:
      - name: merchant_id
        in: path
        required: true
        description: Lian Lian Merchant ID
        schema:
          type: string
    post:
      summary: Send Payment to Merchant
      operationId: post-merchants-merchant_id-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Example:
                  value:
                    client_id: DIYE8DFYAU62ALSDOE
                    status: ongoing
                    currency: USD
                    amount: '19.85'
                    note: rfb
                    id: '2020011302151304'
        '400':
          description: |
            Codes:

            | Code | Description |
            |------|------------|
            |154008 | Client has insufficient balance to pay merchant|
            |154011 | Currency not supported|
            |154016 | Merchant is blocked from receiving payments|
            |154015 | Duplicate payment `client_id` - *This is not the case if the original result is returend* |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Example:
                  value:
                    code: '154008'
                    message: Insufficient balance of client.
      description: "Initiates a payment to specific merchant.\n\nNote this call is Idempotent if sent with the same Signature or if sent with a new Signature but the same client_id.  In either case the original result will be sent back to the client whether the result was error or success.\n\nNote: This synchronous call, on success, only guarantees the money has been debited from the client account.  Actual payment takes too long to be done synchronously and will be completed within a few days typically.\n\nSteps within API:\n\n* **Money Debited** from client's account\n can fail from insufficient funds\n* **Verify Merchant Registration** information is valid\n  If Merchant is unknown, call fails\n  If Merchant status is `blocked`, call fails \n* **Send Money** to merchant\n  If any issues arise, Lianlian Pay customer support helps fix issues and finalize transfer\n\nCall returns payment object including payment status."
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: Payment ID according to client
                currency:
                  type: string
                  description: 3 letter code of payment currency
                amount:
                  type: number
                  description: Amount to pay merchant
                note:
                  type: string
                  description: Additional information to help track payment
              required:
                - client_id
                - currency
                - amount
  /webhook:
    get:
      summary: List All Webhook Endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook-Endpoint'
      operationId: get-webhook
      description: Returns a list of your webhook endpoints
      tags:
        - Webhook Endpoints
    post:
      summary: Create Webhook Endpoint
      operationId: post-webhook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-tags:
                  - Webhook Endpoints
                properties:
                  id:
                    type: string
                  created:
                    type: number
                    description: Time at which the object was created. Measured in seconds since the Unix epoch
                  enable_events:
                    type: array
                    description: "The list of events to enable for this endpoint. ['*'] indicates that all events are enabled, except those that require explicit selection"
                    items:
                      type: string
                  is_enabled:
                    type: boolean
                    description: The status of the webhook. It can be enabled or disabled.
                  url:
                    type: string
                    description: The URL of the webhook endpoint
                x-examples:
                  Example:
                    id: we_1Fya1E2eZvKYlo2COY23Yyij
                    created: 1578472560
                    enabled_events:
                      - payment.status
                      - merchant.status
                    is_live: false
                    is_enabled: true
                    url: 'https://example.com/my/webhook/endpoint'
                type: object
                title: '| Webhook Endpoint Object'
      description: 'A webhook endpoint must have a url and a list of enabled_events. You may optionally specify the Boolean connect parameter. If set to true, then a Connect webhook endpoint that notifies the specified url about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified url only about events from your account is created. You can also create webhook endpoints in the webhooks settings section of the Dashboard.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  items:
                    $ref: '#/components/schemas/Webhook-Events'
                  enum:
                    - payment.status
                    - merchant.status
                  description: |-
                    List of events a client can sign up for Webhook calls.

                    | Value | Description |
                    |--|--|
                    | payment.status | Occurs whenever the status of a payment changes |
                    | merchant.status | Occurs whenever the status of a merhant changes |
                  title: '| Webhook Events Enumeration'
                  type: array
                url:
                  type: string
                is_enabled:
                  type: boolean
                  description: Enabled or not - default is true
              required:
                - events
                - url
      tags:
        - Webhook Endpoints
  '/webhook/{webhook_id}':
    parameters:
      - schema:
          type: string
        name: webhook_id
        in: path
        required: true
        description: ID of Webhook Endpoint
    get:
      summary: Get Webhook Endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook-Endpoint'
      operationId: get-webhook-webhook_id
      description: Retrieves the webhook endpoint with the given ID
      tags:
        - Webhook Endpoints
    delete:
      summary: Delete Webhook Endpoint
      operationId: delete-webhook-webhook_id
      responses:
        '200':
          description: OK
      description: Deletes webhook endpoint configuration
      tags:
        - Webhook Endpoints
    put:
      summary: Modify Webhook Endpoint
      operationId: put-webhook-webhook_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-tags:
                  - Webhook Endpoints
                properties:
                  id:
                    type: string
                  created:
                    type: number
                    description: Time at which the object was created. Measured in seconds since the Unix epoch
                  enable_events:
                    type: array
                    description: "The list of events to enable for this endpoint. ['*'] indicates that all events are enabled, except those that require explicit selection"
                    items:
                      type: string
                  is_enabled:
                    type: boolean
                    description: The status of the webhook. It can be enabled or disabled.
                  url:
                    type: string
                    description: The URL of the webhook endpoint
                x-examples:
                  Example:
                    id: we_1Fya1E2eZvKYlo2COY23Yyij
                    created: 1578472560
                    enabled_events:
                      - payment.status
                      - merchant.status
                    is_live: false
                    is_enabled: true
                    url: 'https://example.com/my/webhook/endpoint'
                type: object
                title: '| Webhook Endpoint Object'
      description: Edit a Webhook Endpoint
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  items:
                    $ref: '#/components/schemas/Webhook-Events'
                  enum:
                    - payment.status
                    - merchant.status
                  description: |-
                    List of events a client can sign up for Webhook calls.

                    | Value | Description |
                    |--|--|
                    | payment.status | Occurs whenever the status of a payment changes |
                    | merchant.status | Occurs whenever the status of a merhant changes |
                  title: '| Webhook Events Enumeration'
                  type: array
                is_enabled:
                  type: boolean
                url:
                  type: string
      tags:
        - Webhook Endpoints
  '/merchants/{merchant_id}/payments/{payment_id}':
    parameters:
      - name: merchant_id
        in: path
        required: true
        schema:
          type: string
        description: Lian Lian Merchant ID
      - name: payment_id
        in: path
        required: true
        schema:
          type: string
        description: Lian Lian Payment ID
    get:
      summary: Get Payment
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Example:
                  value:
                    client_id: DIYE8DFYAU62ALSDOE
                    status: success
                    currency: USD
                    amount: '19.85'
                    note: rfb
                    id: '2020011302151304'
      operationId: get-merchants-merchant_id-payments-payment_id
      description: "Get a Merchant's Payment Object including status."
  '/merchants/{merchant_id}/payments/client_id/{client_id}':
    parameters:
      - name: merchant_id
        in: path
        required: true
        schema:
          type: string
        description: Lian Lian Merchant ID
      - name: client_id
        in: path
        schema:
          type: string
        required: true
        description: "Client's Payment ID"
    get:
      summary: Get Payment by Client ID
      tags:
        - Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              examples:
                Example:
                  value:
                    client_id: DIYE8DFYAU62ALSDOE
                    status: success
                    currency: USD
                    amount: '19.85'
                    note: rfb
                    id: '2020011302151304'
      operationId: get-merchants-merchant_id-payments-clientid-client_id
      description: "Get a Merchant's Payment Object including status by Client's Payment ID."
  /balance:
    get:
      summary: Get Client Balance
      tags:
        - Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: 3 letter currency code
                    balance:
                      type: string
                      description: Total balance for this currency
                  required:
                    - currency
                    - Balance
              examples:
                Example:
                  value:
                    - currency: USD
                      balance: '4182.28'
                    - currency: CNY
                      balance: '78.99'
        '400':
          description: |-
            Codes:

            | Code | Description |
            |------|------------|
            |154011 | Currency not supported|
            |999995 | Invalid Parameter|
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Example:
                  value:
                    code: '154011'
                    message: Currency not support.
      operationId: get-balance
      parameters:
        - schema:
            type: string
          in: query
          name: currency
          description: Repeat parameter to specify 1 or more 3 letter currency codes to return balance in.
      description: "Returns Total balance of client's account within Lianlian Pay in one or more currencies.  Not specifying a currency will return the default currencies configured for client.  \n\nTypically this is USD & CNY."
    parameters: []
components:
  schemas:
    Merchant:
      title: '| Merchant Object'
      type: object
      x-tags:
        - Merchants
      description: Merchant object today focused on registration status
      x-examples:
        Example: {}
      properties:
        id:
          type: string
          description: |-
            Lianlian Pay merchant ID. Merchant shall use this ID to contact Lianlian Pay for any payment issues.

            Non-existant if `registraton_complete` is false.
        client_id:
          type: string
          description: "Client's ID for this Merchant"
        status:
          x-tags:
            - Merchants
          enum:
            - pending
            - need_info
            - success
            - fail
            - redirect
          description: |-
            State of merchant registration process.  One of:

            | Value | Description |
            |--------|------------|
            | ongoing | Registration ongoing |
            | need_info | Merchant must communicate with Lian Lian |
            | success | Ready for delivery money to merchant |
            | blocked | User has been blacklisted from receiving payments |
          title: '| Registration Status Enumeration'
          type: string
        registration_url:
          type: string
          description: "URL to redirect merchant to in order to start registration on Lianlian Pay platform. \n \nNon-existent if `registration_complete` is true."
        shop_url:
          type: string
          description: "URL of Merchant's shop.  For some clients this URL is auto-generated from `client_id`"
        note:
          type: string
          description: Human readable description of Merchant
        registraton_complete:
          type: boolean
          description: |-
            State of merchant registration process.  One of:

            | Value | Description |
            |--------|------------|
            | true| Merchant registration complete, platform can issue payment to this merchant |
            | false| Merchant registration not complete yet, platform cannot issue payment to this merchant |
      required:
        - client_id
        - status
        - registraton_complete
    Error:
      title: '| Error'
      type: object
      description: |
        This object is returned anytime a REST request returns HTTP status 400.

        | Code | Message |
        |------|---------|
        |154008 | Client has insufficient balance to pay merchant|
        |154011 | Currency not supported|
        |154016 | Merchant is blocked from receiving payments|
        |154015 | Duplicate payment `client_id` - *This is not the case if the original result is returend* |
        |999995 | Invalid Parameter|
      x-examples: {}
      properties:
        code:
          type: string
          description: Error code as described per API
        message:
          type: string
          description: Human readable message of error
      required:
        - code
        - message
    Webhook-Endpoint:
      title: '| Webhook Endpoint Object'
      type: object
      x-examples:
        Example:
          id: we_1Fya1E2eZvKYlo2COY23Yyij
          created: 1578472560
          enabled_events:
            - payment.status
            - merchant.status
          is_live: false
          is_enabled: true
          url: 'https://example.com/my/webhook/endpoint'
      properties:
        id:
          type: string
        created:
          type: number
          description: Time at which the object was created. Measured in seconds since the Unix epoch
        enable_events:
          type: array
          description: "The list of events to enable for this endpoint. ['*'] indicates that all events are enabled, except those that require explicit selection"
          items:
            type: string
        is_enabled:
          type: boolean
          description: The status of the webhook. It can be enabled or disabled.
        url:
          type: string
          description: The URL of the webhook endpoint
      x-tags:
        - Webhook Endpoints
    Webhook-Events:
      type: string
      title: '| Webhook Events Enumeration'
      enum:
        - payment.status
        - merchant.status
      description: |-
        List of events a client can sign up for Webhook calls.

        | Value | Description |
        |--|--|
        | * | All events |
        | payment.status | Occurs whenever the status of a payment changes |
        | merchant.status | Occurs whenever the status of a merhant changes |
      x-tags:
        - Webhook Endpoints
    Payment:
      title: '| Payment Object'
      type: object
      description: Payment object containing payment status
      x-tags:
        - Payments
      properties:
        id:
          type: string
          description: Lian Lian Payment ID
        client_id:
          type: string
          description: "Client's ID for this payment"
        status:
          x-tags:
            - Payments
          enum:
            - in_progress
            - need_info
            - success
            - returned
          description: |-
            State a Payment is in.  One of:

            | Value | Description |
            |--------|------------|
            | ongoing | Money Debited. Payment ongoing normally |
            | need_info | Money Debited. Merchant must communicate with Lian Lian |
            | success | Money Debited. Payment complete |
            | returned | Money Returned to client account |
          title: '| Payment Status Enumeration'
          type: string
        currency:
          type: string
          description: 3 letter code of currency used
        amount:
          type: string
          description: Amount of payment in `currency`
        note:
          type: string
          description: Human readable note passed into POST /payment
      required:
        - id
        - client_id
        - status
        - currency
        - amount
        - note
  securitySchemes: {}
tags:
  - name: Balance
  - name: Merchants
  - name: Payments
  - name: Webhook Endpoints